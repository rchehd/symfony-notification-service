services:
  frankenphp:
    build:
      context: .
      dockerfile: docker/frankenphp/Dockerfile
      args:
        XDEBUG: ${XDEBUG}
    container_name: ${PROJECT_NAME}_frankenphp
    ports:
      - "${NGINX_PORT}:80"
#      - "443:443"
    volumes:
      - ./:/app
      - ./docker/frankenphp/Caddyfile:/etc/frankenphp/Caddyfile
    environment:
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      XDEBUG_MODE: "off"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres

  mailpit:
    image: axllent/mailpit
    container_name: "${PROJECT_NAME}_mailpit"
    ports:
      - "1025:1025"
      - "8025:8025"

  postgres:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: ${PROJECT_NAME}_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw

  worker:
    build:
      context: .
      dockerfile: docker/frankenphp/Dockerfile
      args:
        XDEBUG: "0"
    container_name: "${PROJECT_NAME}_worker"
    depends_on:
      frankenphp:
        condition: service_started
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    environment:
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      XDEBUG_MODE: "off"
    command: php bin/console messenger:consume async -vv

volumes:
  postgres_data:
